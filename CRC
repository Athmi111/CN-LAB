#include <stdio.h>
#include <string.h>

#define N strlen(poly)

char d[30];
char cv[30];
char poly[10];
int dl, i, j;

// Function prototypes
void crc();
void XOR();
void r();

void XOR() {
    for (j = 1; j < N; j++) {
        cv[j] = (cv[j] == poly[j]) ? '0' : '1';
    }
}

void r() {
    printf("\nEnter the received data: ");
    scanf("%s", d);
    printf("Data received: %s\n", d);
    crc();
    for (i = 0; (i < N - 1) && (cv[i] != '1'); i++);
    if (i < N - 1)
        printf("\nError Detected\n");
    else
        printf("\nNo Error Detected\n");
}

void crc() {
    for (i = 0; i < N; i++) {
        cv[i] = d[i];
    }
    do {
        if (cv[0] == '1') {
            XOR();
        }
        for (j = 0; j < N - 1; j++) {
            cv[j] = cv[j + 1];
        }
        cv[j] = d[i++];
    } while (i <= dl + N - 1);
}

int main() {
    printf("\nEnter data to be transmitted: ");
    scanf("%s", d);
    printf("\nEnter the divisor polynomial: ");
    scanf("%s", poly);

    dl = strlen(d);
    for (i = dl; i < dl + N - 1; i++) {
        d[i] = '0';
    }
    d[i] = '\0'; 
    printf("\nData padded with n-1 zeroes: %s", d);
    crc();
    printf("\nCRC value is: %s", cv);

    for (i = dl; i < dl + N - 1; i++) {
        d[i] = cv[i - dl];
    }
    d[i] = '\0'; 
    printf("\nFinal dataword to be sent: %s", d);
    r();
    return 0;
}

